<?xml version='1.0' encoding='windows-1252'?>
<powerdba-query-list>

  <queries>
  	
    <query name="scheduler_jobs">
      <title> Scheduler </title>
      <name> scheduler_jobs </name>
      <sql>
          select 'not implemented in 9i' from dual
      </sql>        
    </query>
  	
    <query name="locks">
      <title> Locks </title>
      <name> locks </name>
      <sql>
select 
nvl(S.USERNAME,s.program) username, 
        L.SID sid, 
        nvl(S.TERMINAL,'None') terminal, 
        decode(command, 
0,'None',decode(l.id2,0,U1.NAME||'.'||substr(T1.NAME,1,20),'None')) tab, 
decode(command, 
0,'Background', 
1,'Create Table', 
2,'INSERT', 
3,'SELECT', 
4,'CREATE CLUSTER', 
5,'ALTER CLUSTER', 
6,'UPDATE', 
7,'DELETE', 
8,'DROP', 
9,'CREATE INDEX', 
10,'DROP INDEX', 
11,'ALTER INDEX', 
12,'DROP TABLE', 
13,'CREATE SEQUENCE', 
14,'ALTER SEQUENCE', 
15,'ALTER TABLE', 
16,'DROP SEQUENCE', 
17,'GRANT', 
18,'REVOKE', 
19,'CREATE SYNONYM', 
20,'DROP SYNONYM', 
21,'CREATE VIEW', 
22,'DROP VIEW', 
23,'VALIDATE INDEX', 
24,'CREATE PROCEDURE', 
25,'ALTER PROCEDURE', 
26,'LOCK TABLE', 
27,'NO OPERATION', 
28,'RENAME', 
29,'COMMENT', 
30,'AUDIT', 
31,'NOAUDIT', 
32,'CREATE EXTERNAL DATABASE', 
33,'DROP EXTERNAL DATABASE', 
34,'CREATE DATABASE', 
35,'ALTER DATABASE', 
36,'CREATE ROLLBACK SEGMENT', 
37,'ALTER ROLLBACK SEGMENT', 
38,'DROP ROLLBACK SEGMENT', 
39,'CREATE TABLESPACE', 
40,'ALTER TABLESPACE', 
41,'DROP TABLESPACE', 
42,'ALTER SESSION', 
43,'ALTER USER', 
44,'COMMIT', 
45,'ROLLBACK', 
46,'SAVEPOINT', 
47,'PL/SQL EXECUTE', 
48,'SET TRANSACTION', 
49,'ALTER SYSTEM SWITCH LOG', 
50,'EXPLAIN', 
51,'CREATE USER', 
52,'CREATE ROLE', 
53,'DROP USER', 
54,'DROP ROLE', 
55,'SET ROLE', 
56,'CREATE SCHEMA', 
57,'CREATE CONTROL FILE', 
58,'ALTER TRACING', 
59,'CREATE TRIGGER', 
60,'ALTER TRIGGER', 
61,'DROP TRIGGER', 
62,'ANALYZE TABLE', 
63,'ANALYZE INDEX', 
64,'ANALYZE CLUSTER', 
65,'CREATE PROFILE', 
66,'DROP PROFILE', 
67,'ALTER PROFILE', 
68,'DROP PROCEDURE', 
69,'DROP PROCEDURE',
70,'ALTER RESOURCE COST', 
71,'CREATE SNAPSHOT LOG', 
72,'ALTER SNAPSHOT LOG', 
73,'DROP SNAPSHOT LOG', 
74,'CREATE SNAPSHOT', 
75,'ALTER SNAPSHOT', 
76,'DROP SNAPSHOT', 
79,'ALTER ROLE',
85,'TRUNCATE TABLE', 
86,'TRUNCATE CLUSTER', 
87,'-', 
88,'ALTER VIEW', 
89,'-', 
90,'-', 
91,'CREATE FUNCTION', 
92,'ALTER FUNCTION', 
93,'DROP FUNCTION', 
94,'CREATE PACKAGE', 
95,'ALTER PACKAGE', 
96,'DROP PACKAGE', 
97,'CREATE PACKAGE BODY', 
98,'ALTER PACKAGE BODY', 
99,'DROP PACKAGE BODY', 
command||' - ???') COMMAND, 
        decode(L.LMODE,1,'No Lock', 
                2,'Row Share', 
                3,'Row Exclusive', 
                4,'Share', 
                5,'Share Row Exclusive', 
                6,'Exclusive','NONE') lmode, 
        decode(L.REQUEST,1,'No Lock', 
                2,'Row Share', 
                3,'Row Exclusive', 
                4,'Share', 
                5,'Share Row Exclusive', 
                6,'Exclusive','NONE') request, 
l.id1||'-'||l.id2 Laddr, 
l.type||' - '|| 
decode(l.type, 
'BL','Buffer hash table instance lock', 
'CF',' Control file schema global enqueue lock', 
'CI','Cross-instance function invocation instance lock',
'CS','Control file schema global enqueue lock', 
'CU','Cursor bind lock',
'DF','Data file instance lock', 
'DL','Direct loader parallel index create',
'DM','Mount/startup db primary/secondary instance lock', 
'DR','Distributed recovery process lock', 
'DX','Distributed transaction entry lock', 
'FI','SGA open-file information lock', 
'FS','File set lock', 
'HW','Space management operations on a specific segment lock',
'IN','Instance number lock',
'IR','Instance recovery serialization global enqueue lock', 
'IS','Instance state lock',
'IV','Library cache invalidation instance lock', 
'JQ','Job queue lock',
'KK','Thread kick lock',
'MB','Master buffer hash table instance lock', 
'MM','Mount definition gloabal enqueue lock', 
'MR','Media recovery lock', 
'PF','Password file lock',
'PI','Parallel operation lock',
'PR','Process startup lock',
'PS','Parallel operation lock',
'RE','USE_ROW_ENQUEUE enforcement lock', 
'RT','Redo thread global enqueue lock', 
'RW','Row wait enqueue lock', 
'SC','System commit number instance lock', 
'SH','System commit number high water mark enqueue lock', 
'SM','SMON lock',
'SN','Sequence number instance lock', 
'SQ','Sequence number enqueue lock', 
'SS','Sort segment lock',
'ST','Space transaction enqueue lock', 
'SV','Sequence number value lock', 
'TA','Generic enqueue lock', 
'TD','DDL enqueue lock', 
'TE','Extend-segment enqueue lock', 
'TM','DML enqueue lock', 
'TO','Temporary Table Object Enqueue', 
'TT','Temporary table enqueue lock', 
'TX','Transaction enqueue lock', 
'UL','User supplied lock', 
'UN','User name lock', 
'US','Undo segment DDL lock',
'WL','Being-written redo log instance lock', 
'WS','Write-atomic-log-switch global enqueue lock', 
'TS',decode(l.id2,0,'Temporary segment enqueue lock (ID2=0)', 
                    'New block allocation enqueue lock (ID2=1)'), 
'LA','Library cache lock instance lock (A=namespace)', 
'LB','Library cache lock instance lock (B=namespace)', 
'LC','Library cache lock instance lock (C=namespace)', 
'LD','Library cache lock instance lock (D=namespace)', 
'LE','Library cache lock instance lock (E=namespace)', 
'LF','Library cache lock instance lock (F=namespace)', 
'LG','Library cache lock instance lock (G=namespace)', 
'LH','Library cache lock instance lock (H=namespace)', 
'LI','Library cache lock instance lock (I=namespace)', 
'LJ','Library cache lock instance lock (J=namespace)', 
'LK','Library cache lock instance lock (K=namespace)', 
'LL','Library cache lock instance lock (L=namespace)', 
'LM','Library cache lock instance lock (M=namespace)', 
'LN','Library cache lock instance lock (N=namespace)', 
'LO','Library cache lock instance lock (O=namespace)', 
'LP','Library cache lock instance lock (P=namespace)', 
'LS','Log start/log switch enqueue lock', 
'PA','Library cache pin instance lock (A=namespace)', 
'PB','Library cache pin instance lock (B=namespace)', 
'PC','Library cache pin instance lock (C=namespace)', 
'PD','Library cache pin instance lock (D=namespace)', 
'PE','Library cache pin instance lock (E=namespace)', 
'PF','Library cache pin instance lock (F=namespace)', 
'PG','Library cache pin instance lock (G=namespace)', 
'PH','Library cache pin instance lock (H=namespace)', 
'PI','Library cache pin instance lock (I=namespace)', 
'PJ','Library cache pin instance lock (J=namespace)', 
'PL','Library cache pin instance lock (K=namespace)', 
'PK','Library cache pin instance lock (L=namespace)', 
'PM','Library cache pin instance lock (M=namespace)', 
'PN','Library cache pin instance lock (N=namespace)', 
'PO','Library cache pin instance lock (O=namespace)', 
'PP','Library cache pin instance lock (P=namespace)', 
'PQ','Library cache pin instance lock (Q=namespace)', 
'PR','Library cache pin instance lock (R=namespace)', 
'PS','Library cache pin instance lock (S=namespace)', 
'PT','Library cache pin instance lock (T=namespace)', 
'PU','Library cache pin instance lock (U=namespace)', 
'PV','Library cache pin instance lock (V=namespace)', 
'PW','Library cache pin instance lock (W=namespace)', 
'PX','Library cache pin instance lock (X=namespace)', 
'PY','Library cache pin instance lock (Y=namespace)', 
'PZ','Library cache pin instance lock (Z=namespace)', 
'QA','Row cache instance lock (A=cache)', 
'QB','Row cache instance lock (B=cache)', 
'QC','Row cache instance lock (C=cache)', 
'QD','Row cache instance lock (D=cache)', 
'QE','Row cache instance lock (E=cache)', 
'QF','Row cache instance lock (F=cache)', 
'QG','Row cache instance lock (G=cache)', 
'QH','Row cache instance lock (H=cache)', 
'QI','Row cache instance lock (I=cache)', 
'QJ','Row cache instance lock (J=cache)', 
'QL','Row cache instance lock (K=cache)', 
'QK','Row cache instance lock (L=cache)', 
'QM','Row cache instance lock (M=cache)', 
'QN','Row cache instance lock (N=cache)', 
'QO','Row cache instance lock (O=cache)', 
'QP','Row cache instance lock (P=cache)', 
'QQ','Row cache instance lock (Q=cache)', 
'QR','Row cache instance lock (R=cache)', 
'QS','Row cache instance lock (S=cache)', 
'QT','Row cache instance lock (T=cache)', 
'QU','Row cache instance lock (U=cache)', 
'QV','Row cache instance lock (V=cache)', 
'QW','Row cache instance lock (W=cache)', 
'QX','Row cache instance lock (X=cache)', 
'QY','Row cache instance lock (Y=cache)', 
'QZ','Row cache instance lock (Z=cache)','????') Lockt 
from    V$LOCK L,  
        V$SESSION S, 
        SYS.USER$ U1, 
        SYS.OBJ$ T1 
where   L.SID = S.SID  
and     T1.OBJ#  = decode(L.ID2,0,L.ID1,1)  
and     U1.USER# = T1.OWNER# 
and     S.TYPE like ? 
order by 1,2,5 
      </sql>
            
      <bind-variables>
        <var>
          <position> 1 </position>
          <name> type </name>
        </var>
      </bind-variables>
      <links>
        <link>
          <action> DB_SESS_ZOOM </action>
          <column> sid </column>
          <linkvars>
            <var>
              <varname> sid </varname>
              <from-column> sid </from-column>
            </var>
          </linkvars>
        </link>
      </links>     
        
    </query>
  	
    <query name="sessions">
      <title> Sessions </title>
      <name> sessions </name>
      <rac-enabled> Y </rac-enabled>
      <sql>
          select 
                 vs.sid "Sid", 
                 decode(status,'INACTIVE','INACT','ACTIVE','ACT',status) "Status", 
                 lower(vs.username) "Ora User", 
                 substr(module,1,20) module,
                 substr(action,1,20) action, 
                 vs.osuser "OS User", 
                 vs.program "Client Program", 
                 vs.machine,  
                 vp.pid,
                 to_char(vss.value,'99,999,999,999') "Statistic^", 
                 --decode(vs.command, 0, ' ', 2,'Ins',3,'Sel',6,'Upd',45,'Rbk',7,'Del',47,'Pls',62,'Alz',vs.command) "Cmd", 
                 sw.event "Current Wait Event",  
                 sw.p1 "P1",  
                 sw.p2 "P2",  
                 sw.p3 "P3",  
                 decode(vslo.sid, null, null, to_char(round(sofar/totalwork*100,0))||'%') "Long", 
                 decode(lck.sid, null, null, lck.job_id) "Job"
              from (select * from v$session where nvl(module,'XXX') != 'Power*DBA') vs, 
                   v$process vp, v$sesstat vss, v$session_longops vslo,
                   (select sid, id2 job_id from v$lock where type = 'JQ') lck,
                   v$session_wait sw 
              where vs.paddr = vp.addr (+)
                and vs.sid = sw.sid     
                and vslo.sid (+) = vs.sid      
                and lck.sid (+) = vs.sid    
                and vslo.time_remaining (+) > 0  
                and vs.sid   = vss.sid     
                and vss.statistic# (+) = ? 
                and vs.status like ?
                and vs.username like ?
                and vs.type like ?
                and lower(nvl(vs.program,'xxx')) not like '%emagent%'
                and nvl(vs.module,'xxx') like ?
                and machine like ?
              order by vs.status, vss.value desc
      </sql>
      
      <bind-variables>
        <var>
          <position> 1 </position>
          <name> statistic </name>
          <default-value> 9 </default-value>
        </var>
        <var>
          <position> 2 </position>
          <name> sessionstatus </name>
          <default-value> ACTIVE </default-value>
        </var>
        <var>
          <position> 3 </position>
          <name> oracleuser </name>
          <default-value> % </default-value>
        </var>
        <var>
          <position> 4 </position>
          <name> sessiontype </name>
          <default-value> % </default-value>
        </var>
        <var>
          <position> 5 </position>
          <name> module </name>
          <default-value> % </default-value>
        </var>
        <var>
          <position> 6 </position>
          <name> machine </name>
          <default-value> % </default-value>
        </var>
      </bind-variables>
      
      <links>
        <link>
          <action> DB_SESS_ZOOM </action>
          <column> sid </column>
          <linkvars>
            <var>
              <varname> sid </varname>
              <from-column> sid </from-column>
            </var>
          </linkvars>
        </link>
        
        <link>
          <action> DB_WAIT_DETAIL </action>
          <column> Current Wait Event </column>
          <linkvars>
            <var>
              <varname> sid </varname>
              <from-column> sid </from-column>
            </var>
            <var>
              <varname> event </varname>
              <from-column> Current Wait Event </from-column>
            </var>
            <var>
              <varname> p1 </varname>
              <from-column> p1 </from-column>
            </var>
            <var>
              <varname> p2 </varname>
              <from-column> p2 </from-column>
            </var>
            <var>
              <varname> p3 </varname>
              <from-column> p3 </from-column>
            </var>
          </linkvars>
        </link>
        
        <link>
          <action> DB_LONGOPS_DETAIL </action>
          <column> Long </column>
          <linkvars>
            <var>
              <varname> sid </varname>
              <from-column> sid </from-column>
            </var>
          </linkvars>
        </link>
        
        <link>
          <action> DB_JOBS_DETAIL </action>
          <column> Job </column>
          <linkvars>
            <var>
              <varname> key </varname>
              <from-column> Job </from-column>
            </var>
          </linkvars>
        </link>
                
      </links>
        
    </query>
  
    
    <query>
      <title> Wait History </title>
      <name> waithistory </name>
      <sql>
          select 'Current-> ' seq#, event, p1text, p1, p2text, p2, p3text, p3, wait_time, state from v$session_wait where sid = ?
      </sql>      

      <bind-variables>
        <var>
          <position> 1 </position>
          <name> sid </name>
        </var>
      </bind-variables> 
      
      <links>      
        <link>
          <action> DB_WAIT_DETAIL </action>
          <column> event </column>
          <linkvars>
            <var>
              <varname> event </varname>
              <from-column> event </from-column>
            </var>
            <var>
              <varname> p1 </varname>
              <from-column> p1 </from-column>
            </var>
            <var>
              <varname> p2 </varname>
              <from-column> p2 </from-column>
            </var>
            <var>
              <varname> p3 </varname>
              <from-column> p3 </from-column>
            </var>
          </linkvars>
        </link>            
      </links>  
      
    </query>
    
    <query>
      <title> Background Sessions </title>
      <name> backgroundsessions </name>
      <sql>
          select vs.sid "Sid", 
                 vs.serial# "Ser#", 
                 status "Status", 
                 lower(vs.username) "Ora User", 
                 lower(vs.module)  || ' ' || lower(vs.action) "App Info", 
                 vs.osuser "OS User", 
                 vbg.name "Name",
                 vbg.description "Description",
                 vs.program "Program",
                 vp.spid "Server Pid",  
                 decode(vs.command, 0, ' ', 2,'Insert',3,'Select',6,'Update',45,'Rollback',7,'Delete',47,'Pl/sql',62,'Analyze',vs.command) "Cmd", 
                 vsw.event "Current Wait Event",  
                 vsw.p1 "P1",  
                 vsw.p2 "P2",  
                 vsw.p3 "P3"
              from v$session vs, 
                   v$process vp, 
                   v$bgprocess vbg, 
                   v$session_wait vsw
              where vs.paddr = vp.addr     
                and vbg.paddr (+) = vp.addr       
                and vs.sid   = vsw.sid     
                and (vs.type = 'BACKGROUND' or vs.username is null)
              order by vs.status
      </sql>
      
      <bind-variables></bind-variables>      
      <links>
        <link>
          <action> DB_SESS_ZOOM </action>
          <column> sid </column>
          <desc> Get Session Detail </desc>
          <linkvars>
            <var>
              <varname> sid </varname>
              <from-column> sid </from-column>
            </var>
          </linkvars>
        </link>
        <link>
          <action> DB_WAIT_DETAIL </action>
          <column> Current Wait Event </column>
          <desc> Get Detailed Wait Event Information </desc>
          <linkvars>
            <var>
              <varname> sid </varname>
              <from-column> sid </from-column>
            </var>
            <var>
              <varname> event </varname>
              <from-column> Current Wait Event </from-column>
            </var>
            <var>
              <varname> p1 </varname>
              <from-column> p1 </from-column>
            </var>
            <var>
              <varname> p2 </varname>
              <from-column> p2 </from-column>
            </var>
            <var>
              <varname> p3 </varname>
              <from-column> p3 </from-column>
            </var>
          </linkvars>
        </link>
      </links>
        
    </query>
    
    <query>
      <title> Blockers </title>
      <name> blockers </name>
      <sql>
          SELECT blocking_sid, num_blocked 
            FROM ( SELECT blocking_sid, SUM(num_blocked) num_blocked 
            FROM ( SELECT l.id1, l.id2,
                          MAX(DECODE(l.block, 1, i.instance_name||'-'||l.sid, 
                          2, i.instance_name||'-'||l.sid, 0 )) blocking_sid,
                          SUM(DECODE(l.request, 0, 0, 1 )) num_blocked
                    FROM gv$lock l, gv$instance i
                    WHERE ( l.block!= 0 OR l.request > 0 ) AND 
                            l.inst_id = i.inst_id 
                            GROUP BY l.id1, l.id2)
            GROUP BY blocking_sid 
            ORDER BY num_blocked DESC) 
            WHERE num_blocked != 0
      </sql>
      
      <bind-variables></bind-variables>
      <links></links>
        
    </query>
    
    <query>
      <title> System Stats </title>
      <name> sysstat </name>
      <sql>
          select class, name, value from v$sysstat where value != 0 order by class, name
      </sql>  
      <data-type> 1 </data-type>
      <bind-variables></bind-variables>
      <links></links>        
    </query>
    
    <query>
      <title> Global Services </title>
      <name> globalservices </name>
      <sql>
select null " " from dual
      </sql>
            
      <bind-variables></bind-variables>
      <links></links>
   
    </query>
    
    <query name="capture">
      <title> Capture Config </title>
      <name> capture </name>
      <sql>
		select capture_name, 
			queue_owner||'.'||queue_name "Queue",
			rule_set_owner,
			rule_set_name,
			status,
			to_char(start_scn,'999,999,999,999,999') "Start SCN",
			to_char(captured_scn,'999,999,999,999,999') "Captured SCN",
			to_char(applied_scn,'999,999,999,999,999') "Applied SCN"
		 from dba_capture
      </sql>  
      <bind-variables></bind-variables>
      <links>
        <link>
          <action> DB_CAPTURE_DETAIL </action>
          <column> capture_name </column>
          <linkvars>
            <var>
              <varname> key </varname>
              <from-column> capture_name </from-column>
            </var>
          </linkvars>
        </link>
      </links>        
    </query>
    
    <query name="systemevents">
      <title> System Events </title>
      <name> systemevents </name>
      <sql>
         select
           e.event,                                  
           round(e.time_waited/100,0) "Time Waited (secs)",  
           round(e.average_wait/100,0) "Average Wait (secs)", 
           e.total_waits,                      
           e.total_timeouts              
         from v$system_event e                                
         where e.event not like 'PX%'   
           and e.event not like 'Queue Monitor%' 
           and e.event not in ('smon timer','class slave wait', 
                     'pmon timer', 
                     'rdbms ipc message',
                     'Null event',
                     'parallel query dequeue',
                     'pipe get',
                     'client message',
                     'SQL*Net message to client',
                     'SQL*Net message from client',
					 'SQL*Net more data from client',
					 'SQL*Net more data to client',
					 'SQL*Net message from dblink',
					 'rdbms ipc reply',
					 'dispatcher timer',
					 'virtual circuit status',
					 'lock manager wait for remote message',
					 'PX Idle Wait',
				     'PX Deq: Execution Msg',
					 'PX Deq: Table Q Normal',
					 'wakeup time manager',
					 'slave wait',
					 'i/o slave wait',
					 'jobq slave wait',
					 'null event',
					 'gcs remote message',
					 'gcs for action',
					 'ges remote message',
					 'queue messages',
					 'ARCH wait on SENDREQ')
        order by e.time_waited desc
      </sql>  
      <bind-variables></bind-variables>
      <links>
        <link>
          <action> DB_WAIT_DETAIL </action>
          <column> event </column>
          <linkvars>
            <var>
              <varname> event </varname>
              <from-column> event </from-column>
            </var>
          </linkvars>
        </link>
      </links>        
    </query>
    
    <query name="timemodel">
      <title> Session Time Model </title>
      <name> timemodel </name>
      <sql>
        select * from dual where ?=-999
      </sql>  
      <bind-variables>
        <var>
          <position> 1 </position>
          <name> sid </name>
        </var>
      </bind-variables>
      <links></links>
    </query>
    
    <query name="recoveryarea">
      <title> Recovery Area </title>
      <name> recoveryarea </name>
      <sql>
        select 'Not Available in Oracle 9i' from dual
      </sql>        
    </query>
    
  </queries>
  
</powerdba-query-list>
